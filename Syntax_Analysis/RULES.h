int RULES[][13] = {
	{GLOBAL_STMTS},
	{GLOBAL_DECS, GLOBAL_STMTS},
	{EPSILON},
	{EXPR, SEMI_COLON},
	{FUNC_DECLARATION},
	{VARIABLE_DECLARATION},
	{STMT, STMTS},
	{EPSILON},
	{IF, LPAREN, EXPR, ACTION_NEW_IF, RPAREN, LBRACE, STMTS, RBRACE, OTHERWISE, ACTION_END_IF},
	{OWISE, OTHERWISE_BRANCH},
	{EPSILON},
	{ACTION_OWISE_IF, IF, LPAREN, EXPR, ACTION_OWISE_BRANCH, RPAREN, LBRACE, STMTS, RBRACE, OTHERWISE},
	{ACTION_OWISE, LBRACE, STMTS, RBRACE},
	{UNTIL, LPAREN, EXPR, RPAREN, LBRACE, STMTS, RBRACE},
    {ACTION_EVAL_WHILE, WHILE, LPAREN, EXPR, ACTION_CHECK_WHILE, RPAREN, LBRACE, ACTION_START_LOOP, STMTS, ACTION_END_LOOP, RBRACE, ACTION_JUMP_BACK},
	{FOR, LPAREN, ID, FROM, EXPR, TO, EXPR, STEP, EXPR, RPAREN, LBRACE, STMTS, RBRACE},
    {IN_K, ID, ACTION_PUSH_BRACK, ACTION_FUNC_NAME, LPAREN, PARAMETERS, ACTION_PARAM, ACTION_NEW_FUNC, RPAREN, LBRACE, STMTS, RBRACE, ACTION_END_FUNC},
	{EXPR},
	{EPSILON},
	{VARIABLE_DECLARATION},
	{EXPR, SEMI_COLON},
	{IF_STATEMENT},
	{UNTIL_STATEMENT},
	{FOR_STATEMENT},
	{LEAVE, SEMI_COLON},
	{RETURN, RETURNS, SEMI_COLON, ACTION_RETURN},
	{WHILE_STATEMENT},
	{EXPR, EXTRA_PARAMETERS},
	{EPSILON},
    {COMMA,  EXPR, EXTRA_PARAMETERS},
	{EPSILON},
	{EXPR1, EXPRA},
	{SUB_ASSIGN, EXPR1, ACTION_SUB_ASS, EXPRA},
	{PLUS_ASSIGN, EXPR1, ACTION_PLUS_ASS, EXPRA},
	{DIV_ASSIGN, EXPR1, ACTION_DIV_ASS, EXPRA},
	{MUL_ASSIGN, EXPR1, ACTION_MUL_ASS, EXPRA},
	{PWR_ASSIGN, EXPR1, ACTION_PWR_ASS, EXPRA},
    {ASSIGN, EXPR1, ACTION_ASSIGN, EXPRA},
    {EPSILON},
	{EXPR2, EXPRB},
	{LOR, EXPR2, ACTION_LOR, EXPRB},
	{EPSILON},
	{EXPR3, EXPRC},
	{LAND, EXPR3, ACTION_LAND, EXPRC},
	{EPSILON},
	{EXPR4, EXPRD},
	{NOT_EQ, EXPR4, ACTION_NOT_EQ, EXPRD},
	{IS_EQ, EXPR4, ACTION_IS_EQ, EXPRD},
	{EPSILON},
	{EXPR5, EXPRE},
	{LTE, EXPR5, ACTION_LTE, EXPRE},
	{GTE, EXPR5, ACTION_GTE, EXPRE},
	{GT, EXPR5, ACTION_GT, EXPRE},
	{LT, EXPR5, ACTION_LT, EXPRE},
	{EPSILON},
	{EXPR6, EXPRF},
	{SUBTRACT, EXPR6, ACTION_SUB, EXPRF},
	{PLUS, EXPR6, EXPRF, ACTION_ADD},
	{EPSILON},
	{EXPR7, EXPRG},
	{MULTIPLY, EXPR7, ACTION_MUL, EXPRG},
	{MODULUS, EXPR7, ACTION_MOD, EXPRG},
	{POWER, EXPR7, ACTION_POW, EXPRG},
	{DIVIDE, EXPR7, ACTION_DIV, EXPRG},
	{EPSILON},
	{INC, EXPR8, ACTION_PRE_INC},
	{DEC, EXPR8, ACTION_PRE_DEC},
	{PLUS, EXPR8, ACTION_POS},
	{SUBTRACT, EXPR8, ACTION_NEG},
	{LNOT, EXPR8, ACTION_NOT},
	{EXPR8},
	{EXPR9, OP},
	{INC, ACTION_POST_INC},
	{DEC, ACTION_POST_DEC},
	{EPSILON},
    {LPAREN,  EXPR, RPAREN},
    {ID, FUNCORDATA},
    {TRUE_K},
    {FALSE_K},
    {CONST_K},
    {QUOT_MARK,  STR_LIT, QUOT_MARK},
    {LSQBR, ACTION_PUSH_SQR_BRACK, PARAMETERS, RSQBR, ACTION_COLLECT_LIST},
    {ACTION_PUSH_BRACK, LPAREN, PARAMETERS, RPAREN,  ACTION_FUNC_CALL},
    {LSQBR, ACTION_PUSH_SQR_BRACK, PARAMETERS, RSQBR, ACTION_INDEX },
	{EPSILON},
	{LET, ID, ACTION_INIT, EXPRA, SEMI_COLON}
};
